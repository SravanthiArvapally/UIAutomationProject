#define the root logger with appender file (used to know what steps have been executed at run time)
#This is defined to write information(log info) into file or console output
log4j.rootLogger=INFO, FILE,stdout 

#Define log messages to file appender
#This class we have to user when we want to write log into file
log4j.appender.FILE=org.apache.log4j.FileAppender
#file to which i want to write the log. This file wil be created under test-output folder in directory structure
log4j.appender.FILE.File=automation.out
#When ever i run the script i always want to append my log to existing logfile. For each run i dont want to create a 
#new file for log. If false is provided in below statement, every time it will generate new automation log and will not 
#keep your previous run or log
log4j.appender.FILE.Append=true
#When i log, i want to follow some pattern(like at step #9)
log4j.appender.FILE.layout=org.apache.log4j.PatternLayout
log4j.appender.FILE.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n
#To define maximim file size of log file
log4j.appender.file.MaxFileSize=4MB
#when one log file size reaches 4 MB, it will create another file of size 4MB. Like that it can create upto 9 files
#After 9th file, if it exceeds 10, it will delete the first file
log4j.appender.file.MaxBackupIndex=9


#Direct log messages to stdout

#This ConsoleAppender will write the logs to console
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#It will write your log to console
log4j.appender.stdout.Target=System.out
#To follow some pattern for logs 
log4j.appender.FILE.layout=org.apache.log4j.PatternLayout
log4j.appender.FILE.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n


#Once we have this log4j.properties file configured, We need to register this log4j in init class. Then only we can benefit
#the features of log4j 




